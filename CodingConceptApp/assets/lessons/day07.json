[
  {
    "id": "day07-story-01",
    "kind": "story",
    "md": "# Day 7: 현실 세계를 코드로, 객체\n\n현실 세계의 모든 것은 각자의 속성과 행동을 가지고 있습니다. 예를 들어 '자동차'는 색상, 속도라는 속성과 '달린다', '멈춘다'는 행동을 가지고 있죠. 프로그래밍에서는 이러한 사물들을 '객체'로 표현할 수 있습니다."
  },
  {
    "id": "day07-concept-01",
    "kind": "concept",
    "md": "# 객체 (Object)\n\n**객체**는 관련된 데이터(속성)와 함수(메서드)의 집합입니다. 객체를 사용하면 데이터를 보다 체계적으로 관리하고, 코드의 가독성을 높일 수 있습니다.\n\n**구성 요소:**\n- **속성(Property):** 객체의 특징이나 상태를 나타내는 데이터\n- **메서드(Method):** 객체가 수행할 수 있는 동작 (객체에 속한 함수)\n\n```javascript\nlet person = {\n  name: \"Alice\",\n  age: 30,\n  greet: function() {\n    console.log(\"안녕하세요, \" + this.name + \"입니다.\");\n  }\n};\n```"
  },
  {
    "id": "day07-example-01",
    "kind": "example",
    "md": "# 객체 사용 예시\n\n`person` 객체를 사용해 볼까요?\n\n```javascript\nlet person = {\n  name: \"Alice\",\n  age: 30,\n  greet: function() {\n    console.log(\"안녕하세요, \" + this.name + \"입니다.\");\n  }\n};\n\nconsole.log(person.name); // 결과: Alice\nperson.greet(); // 결과: 안녕하세요, Alice입니다.\n```\n\n`person` 객체의 `name` 속성에 접근하여 출력하고, `greet` 메서드를 호출하여 인사말을 출력했습니다."
  },
  {
    "id": "day07-quiz-01",
    "kind": "quiz",
    "quizId": "quiz-day07-01"
  },
  {
    "id": "day07-lab-01",
    "kind": "lab",
    "labId": "lab-day07-01"
  },
  {
    "id": "day07-review-01",
    "kind": "review",
    "md": "# Day 7 복습\n\n오늘은 객체의 개념과 사용법에 대해 학습했습니다. 객체는 속성과 메서드를 통해 현실 세계의 사물을 모델링하는 강력한 도구입니다.\n\n다음 시간에는 '배열'에 대해 알아보겠습니다!"
  }
]
