[
  {
    "id": "day08-story-01",
    "kind": "story",
    "md": "# Day 8: 데이터를 나란히, 배열\n\n여러 개의 데이터를 한 번에 관리하고 싶을 때 어떻게 해야 할까요? 배열은 마치 여러 칸으로 이루어진 기차와 같습니다. 각 칸에 데이터를 순서대로 담아두고, 칸 번호(인덱스)를 이용해 원하는 데이터를 쉽게 꺼내 쓸 수 있습니다."
  },
  {
    "id": "day08-concept-01",
    "kind": "concept",
    "md": "# 배열 (Array)\n\n**배열**은 같은 타입의 데이터 여러 개를 순서대로 저장하는 데이터 구조입니다. 각 데이터는 **인덱스(index)**라는 고유한 번호를 가지며, 이 인덱스를 통해 데이터에 접근할 수 있습니다. 대부분의 프로그래밍 언어에서 배열의 인덱스는 0부터 시작합니다.\n\n```javascript\nlet fruits = [\"사과\", \"바나나\", \"딸기\"];\n```"
  },
  {
    "id": "day08-example-01",
    "kind": "example",
    "md": "# 배열 사용 예시\n\n과일 이름이 담긴 `fruits` 배열을 사용해 볼까요?\n\n```javascript\nlet fruits = [\"사과\", \"바나나\", \"딸기\"];\n\nconsole.log(fruits[0]); // 결과: 사과\nconsole.log(fruits[1]); // 결과: 바나나\n\nfruits[2] = \"포도\";\nconsole.log(fruits); // 결과: [\"사과\", \"바나나\", \"포도\"]\n```\n\n인덱스를 사용하여 배열의 특정 위치에 있는 값에 접근하거나 값을 변경할 수 있습니다."
  },
  {
    "id": "day08-quiz-01",
    "kind": "quiz",
    "quizId": "quiz-day08-01"
  },
  {
    "id": "day08-lab-01",
    "kind": "lab",
    "labId": "lab-day08-01"
  },
  {
    "id": "day08-review-01",
    "kind": "review",
    "md": "# Day 8 복습\n\n오늘은 배열의 개념과 사용법에 대해 학습했습니다. 배열을 사용하면 여러 개의 데이터를 효율적으로 관리할 수 있습니다.\n\n다음 시간에는 '반복문'에 대해 알아보겠습니다!"
  }
]
