[
  {
    "id": "day09-story-01",
    "kind": "story",
    "md": "# Day 9: 컴퓨터에게 반복 작업을 시키는 방법, 반복문\n\n컴퓨터는 사람과 달리 지치지 않고 반복적인 작업을 빠르고 정확하게 수행할 수 있습니다. '안녕하세요'를 100번 출력해야 한다면 어떻게 해야 할까요? 100번의 출력 코드를 직접 작성하는 대신, 반복문을 사용하면 단 몇 줄의 코드로 간단하게 해결할 수 있습니다."
  },
  {
    "id": "day09-concept-01",
    "kind": "concept",
    "md": "# 반복문 (Loop)\n\n**반복문**은 특정 조건이 만족되는 동안 코드 블록을 계속해서 실행하는 제어 구조입니다. 프로그래밍에서는 주로 `for`문과 `while`문을 사용하여 반복을 구현합니다.\n\n- **`for`문:** 정해진 횟수만큼 반복할 때 주로 사용합니다.\n- **`while`문:** 특정 조건이 참인 동안 계속해서 반복할 때 주로 사용합니다."
  },
  {
    "id": "day09-example-01",
    "kind": "example",
    "md": "# for문 사용 예시\n\n`for`문을 사용하여 1부터 5까지의 숫자를 출력해 볼까요?\n\n```javascript\nfor (let i = 1; i <= 5; i++) {\n  console.log(i);\n}\n\n// 결과:\n// 1\n// 2\n// 3\n// 4\n// 5\n```\n\n`i`라는 변수를 1부터 5까지 1씩 증가시키면서 `console.log(i)`를 반복 실행합니다."
  },
  {
    "id": "day09-quiz-01",
    "kind": "quiz",
    "quizId": "quiz-day09-01"
  },
  {
    "id": "day09-lab-01",
    "kind": "lab",
    "labId": "lab-day09-01"
  },
  {
    "id": "day09-review-01",
    "kind": "review",
    "md": "# Day 9 복습\n\n오늘은 반복문의 개념과 `for`문의 사용법에 대해 학습했습니다. 반복문을 사용하면 단순하고 반복적인 작업을 효율적으로 처리할 수 있습니다.\n\n다음 시간에는 '조건문'에 대해 알아보겠습니다!"
  }
]
